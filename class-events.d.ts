/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class AbnormalTimeInBathroom {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'abnormal_time_in_bathroom';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * When the care recipient was first seen in the bathroom.
     */
    entered_bathroom_at: string;
    /**
     * Maximum time before Birdie raises an observation.
     */
    configured_maximum_time_in_bathroom_in_seconds: number;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class AdditionalMedicationTaken {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'additional_medication_taken';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
    /**
     * An array of media objects defining images and audio related to this event.
     */
    media?: {
        /**
         * The type of media this array element contains.
         */
        /**
         * A URI to the media source.
         */
        src: string;
        [k: string]: any;
    }[];
    note?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class AgencyFeatureDisabled {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'agency_feature_disabled';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The id of the relevant agency.
     */
    agency_id: string;
    /**
     * The feature which is being disabled.
     */
    feature: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class AgencyFeatureEnabled {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'agency_feature_enabled';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The id of the relevant agency.
     */
    agency_id: string;
    /**
     * The feature which is being enabled.
     */
    feature: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class AgencyRoleGranted {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'agency_role_granted';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The id of the relevant agency.
     */
    agency_id: string;
    /**
     * The id of the user whose permissions are being granted.
     */
    granted_to: string;
    /**
     * The role being granted to the user.
     */
    role: string;
    user_id?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class AgencyRoleRevoked {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'agency_role_revoked';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The id of the relevant agency.
     */
    agency_id: string;
    /**
     * The id of the user whose permissions are being revoked.
     */
    revoked_from: string;
    /**
     * The role being revoked from the user.
     */
    role: string;
    user_id?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class AlertQualified {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'alert_qualified';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The ID of the alert that was raised.
     */
    alert_id: string;
    /**
     * The care recipient who is the subject of the alert.
     */
    care_recipient_id?: string;
    /**
     * The ID of the category that the raised alert belongs to.
     */
    alert_category_id?: string;
    /**
     * The level of severity used to classify the alert
     */
    /**
     * The ID of the caregiver that raised the alert.
     */
    caregiver_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class AlertRaised {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'alert_raised';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of the alert.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for an alert.
     */
    alert_id: string;
    /**
     * The ID of the event that triggered the alert to be raised.
     */
    observation_event_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class AlertResolved {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'alert_resolved';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * A unique identifier for an alert.
     */
    alert_id: string;
    /**
     * The care recipient who is the subject of the alert.
     */
    care_recipient_id?: string;
    /**
     * A unique identifier for the caregiver who reported the alert as resolved
     */
    caregiver_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class AlertStatusUpdated {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'alert_status_updated';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * A unique identifier for an alert.
     */
    alert_id: string;
    /**
     * The care recipient who is the subject of the alert.
     */
    care_recipient_id?: string;
    /**
     * A unique identifier for the caregiver who updated the status of the alert
     */
    caregiver_id: string;
    /**
     * The updated status of the alert
     */
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class AnomalyInRoutineDetected {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'anomaly_in_routine_detected';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * This is a normalised score of how different the last period was against history.
     */
    anomaly_score?: number;
    /**
     * The last known location of the care recipient.
     */
    last_location?: string;
    /**
     * The datetime the care recipient entered the last known location.
     */
    last_location_start_at?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CarePlanItemDeleted {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'care_plan_item_deleted';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * A unique client generated identifier for this item in the care plan.
     */
    care_plan_item_id: string;
    /**
     * A SNOMED CT concept identifier expressed as a URI for the category of the care plan this item belongs to.
     */
    care_plan_category_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CareRecipientAccessGranted {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'care_recipient_access_granted';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * The user id of the caregiver or family member who is being given access
     */
    granted_to: string;
    /**
     * Role relating to the extent of access to be given
     */
    role: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CareRecipientAccessRevoked {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'care_recipient_access_revoked';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * The user id of the caregiver or family member whose access is being revoked
     */
    revoked_from: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
/**
 * An address expressed using primarily postal conventions. See https://www.hl7.org/fhir/datatypes.html#Address.
 */
export class CareRecipientAddressUpdated {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'care_recipient_address_updated';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    /**
     * Purpose of this address
     */
    /**
     * What this address is used for
     */
    /**
     * Textual representation of the address
     */
    text?: string;
    /**
     * Street name, number, direction & P.O. Box etc.
     */
    line?: string[];
    /**
     * Name of city, town etc.
     */
    city?: string;
    /**
     * District name (aka county)
     */
    district?: string;
    /**
     * Sub-unit of country (abbreviations ok)
     */
    state?: string;
    /**
     * Postal code for area
     */
    postal_code?: string;
    /**
     * Country (e.g. can be ISO 3166 2 or 3 letter code)
     */
    country?: string;
    /**
     * A group of indicators for the position of a location.
     */
    coordinates?: {
        /**
         * A position north or south of the Earth's equator.
         */
        latitude: number;
        /**
         * A position east or west of the Greenwich meridian.
         */
        longitude: number;
    };
    /**
     * Any particular details needed to access the care recipient's address
     */
    access_details?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CareRecipientAdvancedDecisionsUpdated {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'care_recipient_advanced_decisions_updated';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    has_dnacpr_order?: boolean;
    has_decision_making_capacity?: boolean;
    has_granted_power_of_attorney?: boolean;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CareRecipientBasicDetailsUpdated {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'care_recipient_basic_details_updated';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    first_name?: string;
    last_name?: string;
    /**
     * URL of the profile image of the person.
     */
    image_url?: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CareRecipientCreated {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'care_recipient_created';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    first_name?: string;
    last_name?: string;
    /**
     * URL of the profile image of the person.
     */
    image_url?: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    /**
     * The ID of the agency to which the care recipient belongs.
     */
    agency_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CareRecipientGeneralPractitionerDetailsUpdated {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'care_recipient_general_practitioner_details_updated';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    name?: string;
    phone_number?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CareRecipientMedicalHistoryUpdated {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'care_recipient_medical_history_updated';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    allergies?: string;
    self_administers_medication?: boolean;
    disability_notes?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CareRecipientPersonalDetailsUpdated {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'care_recipient_personal_details_updated';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    gender?: string;
    date_of_birth?: string;
    email_address?: string;
    phone_number?: string;
    religion?: string;
    ethnicity?: string;
    family_involvement?: number;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CareRecipientPersonalPreferencesUpdated {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'care_recipient_personal_preferences_updated';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    hobbies?: string;
    likes?: string;
    dislikes?: string;
    general_notes?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CareRecipientPharmacyDetailsUpdated {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'care_recipient_pharmacy_details_updated';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    name?: string;
    /**
     * An address expressed using primarily postal conventions. See https://www.hl7.org/fhir/datatypes.html#Address.
     */
    address?: {
        /**
         * Purpose of this address
         */
        /**
         * What this address is used for
         */
        /**
         * Textual representation of the address
         */
        text?: string;
        /**
         * Street name, number, direction & P.O. Box etc.
         */
        line?: string[];
        /**
         * Name of city, town etc.
         */
        city?: string;
        /**
         * District name (aka county)
         */
        district?: string;
        /**
         * Sub-unit of country (abbreviations ok)
         */
        state?: string;
        /**
         * Postal code for area
         */
        postal_code?: string;
        /**
         * Country (e.g. can be ISO 3166 2 or 3 letter code)
         */
        country?: string;
        /**
         * A group of indicators for the position of a location.
         */
        coordinates?: {
            /**
             * A position north or south of the Earth's equator.
             */
            latitude: number;
            /**
             * A position east or west of the Greenwich meridian.
             */
            longitude: number;
        };
        [k: string]: any;
    };
    phone_number?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CareRecipientRelationshipChanged {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'care_recipient_relationship_changed';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * The user id of the caregiver or family member whose relationship to the care recipient is being changed.
     */
    related_user_id: string;
    /**
     * Relationship between care recipient and related person (e.g. caregiver, daughter)
     */
    relation?: string;
    /**
     * Frequency of contact between related person and care recipient.
     */
    frequency_of_contact?: string;
    /**
     * Type of power of attorney in place.
     */
    type_of_poa?: string;
    /**
     * Whether or not the related person is an emergency contact for care recipient.
     */
    is_emergency_contact?: boolean;
    /**
     * Any concerns recorded.
     */
    concerns?: string[];
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CareRecipientReturnOverdue {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'care_recipient_return_overdue';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * Start timestamp of the period to check, decided by families
     */
    monitoring_start_at: string;
    /**
     * End timestamp of the period to check, decided by families
     */
    monitoring_end_at: string;
    /**
     * Last timestamp the care recipient has been seen in her house via motion sensors
     */
    last_house_activity_at: string;
    /**
     * End timestamp of the period to check, decided by families
     */
    configured_maximum_time_outside_in_seconds: number;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CareRecipientSettingChanged {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'care_recipient_setting_changed';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    /**
     * The name of the setting that was changed.
     */
    name: string;
    value: boolean;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CareRecipientSynchronisationFailed {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'care_recipient_synchronisation_failed';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The agency that we synchronise care recipients with.
     */
    agency_id: string;
    /**
     * The id of the care recipient from the agency.
     */
    remote_id?: string;
    /**
     * The reason why the care recipient synchronisation failed.
     */
    reason: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CaregiverAddedToVisit {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'caregiver_added_to_visit';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
    /**
     * The caregiver added to the visit.
     */
    caregiver_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CaregiverRemovedFromVisit {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'caregiver_removed_from_visit';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
    /**
     * The caregiver removed from visit.
     */
    caregiver_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CaregiverSynchronisationFailed {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'caregiver_synchronisation_failed';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The agency that we synchronise caregivers with.
     */
    agency_id: string;
    /**
     * The reason why the caregiver synchronisation failed.
     */
    reason: string;
    /**
     * The id of the caregiver from the agency.
     */
    remote_id?: string;
    /**
     * The full name of the caregiver from the agency.
     */
    remote_name?: string;
    /**
     * The duplicated email that failed the caregiver synchronisation.
     */
    remote_email?: string;
    /**
     * The duplicated phone number that failed the caregiver synchronisation.
     */
    remote_phone_number?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CaregiverSynchronisationFailureResolved {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'caregiver_synchronisation_failure_resolved';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The identifier of the failure event we resolved.
     */
    failure_event_id: string;
    /**
     * The agency that we synchronise caregivers with.
     */
    agency_id: string;
    /**
     * The caregiver rejecting the event.
     */
    caregiver_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CatheterObservation {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'catheter_observation';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
    /**
     * Volume in milliliters. Other units should be converted to milliliters.
     */
    volume_ml: number;
    note?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CheckIn {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'check_in';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
    otp_verified?: boolean;
    /**
     * OTP code used for verification
     */
    otp_code?: string;
    /**
     * The method used to verify a caregiver was physically at the reported location
     */
    /**
     * Geographical coordinate that specifies the north-south position of a point on the Earth's service.
     */
    latitude?: number;
    /**
     * Geographical coordinate that specifies the east-west position of a point on the Earth's service.
     */
    longitude?: number;
    /**
     * The radius (in metres) of a circle within which a point's true location is
     */
    geo_accuracy?: number;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class CheckOut {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'check_out';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
    otp_verified?: boolean;
    /**
     * OTP code used for verification
     */
    otp_code?: string;
    /**
     * Geographical coordinate that specifies the north-south position of a point on the Earth's service.
     */
    latitude?: number;
    /**
     * Geographical coordinate that specifies the east-west position of a point on the Earth's service.
     */
    longitude?: number;
    /**
     * The radius (in metres) of a circle within which a point's true location is
     */
    geo_accuracy?: number;
    /**
     * The method used to verify a caregiver was physically at the reported location
     */
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class ConcernRaised {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'concern_raised';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * An array of media objects defining images and audio related to this event.
     */
    media?: {
        /**
         * The type of media this array element contains.
         */
        /**
         * A URI to the media source.
         */
        src: string;
        [k: string]: any;
    }[];
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id?: string;
    /**
     * The level of severity used to classify the concern
     */
    /**
     * The type of concern being raised.
     */
    /**
     * Some background information or explanation of the concern.
     */
    note: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
/**
 * DEPRECATED
 */
export class DesiredOutcomeCreated {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'desired_outcome_created';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * A unique client generated identifier for this item in the care plan.
     */
    care_plan_item_id: string;
    /**
     * A SNOMED CT concept identifier expressed as a URI for the category of the care plan this item belongs to.
     */
    care_plan_category_id: string;
    /**
     * Free text description of the care outcome the care recipient desires to achieve.
     */
    desired_outcome: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class DoorClosed {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'door_closed';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * The location of the corresponding door, i.e. front, back...
     */
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class DoorOpened {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'door_opened';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * The location of the corresponding door, i.e. front, back...
     */
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class DoorOpenedTooLong {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'door_opened_too_long';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * The location of the corresponding door
     */
    /**
     * When the door was opened.
     */
    opened_at: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class EmergencyButtonPressed {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'emergency_button_pressed';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class EnteredRoom {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'entered_room';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    /**
     * The room where the Care Recipient entered
     */
    room_name: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class EnvironmentalRiskAssessmentCompleted {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'environmental_risk_assessment_completed';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    note?: string;
    /**
     * Whether or not a risk exists in response to this area
     */
    concern_found: boolean;
    /**
     * The risk area to which this item is associated
     */
    risk_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class EventDelivered {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'event_delivered';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * Receiver agency id
     */
    receiver_id: string;
    /**
     * Source event id
     */
    source_event_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class EventDeliveryFailed {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'event_delivery_failed';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * An agency id
     */
    receiver_id: string;
    /**
     * Source event id
     */
    source_event_id: string;
    /**
     * The reason (not necessary human-readable) to explain the rejection context.
     */
    reason: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class EventRejected {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'event_rejected';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The identifier of the event to reject.
     */
    rejected_event_id: string;
    /**
     * The caregiver rejecting the event.
     */
    caregiver_id?: string;
    /**
     * The reason (not necessary human-readable) to explain the rejection context.
     */
    reason: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class FallDetected {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'fall_detected';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class FileDeleted {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'file_deleted';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * The ID of the file that has been deleted.
     */
    file_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class FileUploaded {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'file_uploaded';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * The ID of the file that has been uploaded
     */
    file_id: string;
    /**
     * The name of the file uploaded from a user's system.
     */
    filename: string;
    /**
     * The type of file that has been uploaded
     */
    file_type: string;
    /**
     * The Internet location of the file that has been uploaded
     */
    url: string;
    /**
     * The type of file that has been uploaded, as provided by the user's browser
     */
    mime_type: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class FluidIntakeObservation {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'fluid_intake_observation';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
    observed?: boolean;
    consumed_volume_ml: number;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class FoodIntakeObservation {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'food_intake_observation';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
    /**
     * An array of media objects defining images and audio related to this event.
     */
    media?: {
        /**
         * The type of media this array element contains.
         */
        /**
         * A URI to the media source.
         */
        src: string;
        [k: string]: any;
    }[];
    note?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class GeneralObservation {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'general_observation';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
    /**
     * An array of media objects defining images and audio related to this event.
     */
    media?: {
        /**
         * The type of media this array element contains.
         */
        /**
         * A URI to the media source.
         */
        src: string;
        [k: string]: any;
    }[];
    note?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class HardwareConsentFormSigned {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'hardware_consent_form_signed';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class HardwareConsultationRequested {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'hardware_consultation_requested';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    /**
     * The reason for the hardware consultation referral.
     */
    referral_reason: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class HardwareEquipmentReady {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'hardware_equipment_ready';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    prc: string;
    locations: string[];
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class HardwareInstallationAppointmentBooked {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'hardware_installation_appointment_booked';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class HardwareInstallationComplete {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'hardware_installation_complete';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class HardwareMonitoringLive {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'hardware_monitoring_live';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class HardwareReferralFormSent {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'hardware_referral_form_sent';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class ImportantSleepDurationVariationMeasured {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'important_sleep_duration_variation_measured';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * Sleep duration between <monitoring_start_at> and <monitoring_end_at>
     */
    total_sleep_duration_in_seconds: number;
    /**
     * Average measured sleep duration over <configured_number_of_days_for_comparison>.
     */
    last_days_average_total_sleep_duration_in_seconds: number;
    /**
     * Minimum absolute variation considered for this observation to be sent
     */
    configured_minimum_variation_to_generate_observation: number;
    /**
     * Number of days averaged to compute the variation compared to the corresponding night
     */
    configured_number_of_days_for_comparison: number;
    /**
     * Minimum duration inside the bedroom without interruption considered as sleep
     */
    configured_minimum_duration_in_bedroom_considered_as_sleep_in_seconds: number;
    /**
     * Start timestamp from which the time in bedroom is taken into account in sleep measure
     */
    monitoring_start_at: string;
    /**
     * End timestamp from which the time in bedroom is taken into account in sleep measure
     */
    monitoring_end_at: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class IncontinencePadObservation {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'incontinence_pad_observation';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
    /**
     * An array of media objects defining images and audio related to this event.
     */
    media?: {
        /**
         * The type of media this array element contains.
         */
        /**
         * A URI to the media source.
         */
        src: string;
        [k: string]: any;
    }[];
    note?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class LeftHome {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'left_home';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * When the care recipient went ouside.
     */
    left_home_at: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class Login {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'login';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class MedicalHistoryItemDeleted {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'medical_history_item_deleted';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * The identifier for the medical history item that has been deleted.
     */
    item_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class MedicalHistoryItemRecorded {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'medical_history_item_recorded';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * The identifier for the medical history item that has been recorded.
     */
    item_id: string;
    /**
     * The URI of the ontological code of the medical history item.
     */
    code: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class MedicationScheduleCreated {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'medication_schedule_created';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * The care recipient who is taking the medication.
     */
    care_recipient_id: string;
    /**
     * A unique identifier for the medication schedule.
     */
    medication_schedule_id: string;
    /**
     * A unique identified for the medication product.
     */
    medical_product_id: string;
    /**
     * The medication is taken as needed (PRN), regularly (SCHEDULED) or in a blister pack (BLISTER)
     */
    /**
     * The size of the medication dose
     */
    dose_size: string;
    /**
     * Additional text to help explain the medication and it's schedule
     */
    note?: string;
    /**
     * A recurrence rule, as described by rfc5545
     */
    rrule: string;
    /**
     * The type of the medication schedule timing.
     */
    /**
     * An optional reference to a previous schedule being replaced by this schedule.
     */
    previous_schedule_id?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class MedicationScheduleDeleted {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'medication_schedule_deleted';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * The care recipient who is taking the medication.
     */
    care_recipient_id: string;
    /**
     * A unique identifier for the medication schedule.
     */
    medication_schedule_id: string;
    /**
     * A unique identified for the medication product.
     */
    medical_product_id: string;
    /**
     * The medication is taken as needed (PRN), regularly (SCHEDULED) or in a blister pack (BLISTER)
     */
    /**
     * The size of the medication dose
     */
    dose_size: string;
    /**
     * Additional text to help explain the medication and it's schedule
     */
    note?: string;
    /**
     * A recurrence rule, as described by rfc5545
     */
    rrule: string;
    /**
     * The type of the medication schedule timing.
     */
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class MedicationScheduleUpdated {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'medication_schedule_updated';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * The care recipient who is taking the medication.
     */
    care_recipient_id: string;
    /**
     * A unique identifier for the medication schedule.
     */
    medication_schedule_id: string;
    /**
     * A unique identified for the medication product.
     */
    medical_product_id: string;
    /**
     * The medication is taken as needed (PRN), regularly (SCHEDULED) or in a blister pack (BLISTER)
     */
    /**
     * The size of the medication dose
     */
    dose_size: string;
    /**
     * Additional text to help explain the medication and it's schedule
     */
    note?: string;
    /**
     * A recurrence rule, as described by rfc5545
     */
    rrule: string;
    /**
     * The type of the medication schedule timing.
     */
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class MentalHealthObservation {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'mental_health_observation';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
    /**
     * An array of media objects defining images and audio related to this event.
     */
    media?: {
        /**
         * The type of media this array element contains.
         */
        /**
         * A URI to the media source.
         */
        src: string;
        [k: string]: any;
    }[];
    note?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class MoodObservation {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'mood_observation';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
    /**
     * An array of media objects defining images and audio related to this event.
     */
    media?: {
        /**
         * The type of media this array element contains.
         */
        /**
         * A URI to the media source.
         */
        src: string;
        [k: string]: any;
    }[];
    note?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class NoMedicationObservationReceived {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'no_medication_observation_received';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for this instance of the task.
     */
    task_instance_id?: string;
    /**
     * A unique identifier for a task definition. DEPRECATED: use task_instance_id instead.
     */
    task_definition_id?: string;
    /**
     * A unique identifier for a task schedule. DEPRECATED: use task_instance_id instead.
     */
    task_schedule_id?: string;
    expected_dose_timestamp?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class NoRecentActivityInBathroomOrToilet {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'no_recent_activity_in_bathroom_or_toilet';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * Last activity of the bathroom or toilets.
     */
    last_activity_at: string;
    /**
     * Minimum no activity duration to generate this observation
     */
    configured_maximum_time_between_bathroom_or_toilet_visits_in_seconds: number;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class NoTaskCompletionObservationReceived {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'no_task_completion_observation_received';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for this instance of the task.
     */
    task_instance_id: string;
    /**
     * A unique identifier for a task definition. DEPRECATED: use task_instance_id instead.
     */
    task_definition_id?: string;
    /**
     * A unique identifier for a task schedule. DEPRECATED: use task_instance_id instead.
     */
    task_schedule_id?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class NoteAddedToAlert {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'note_added_to_alert';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * A unique identifier for an alert.
     */
    alert_id: string;
    /**
     * The care recipient who is the subject of the alert.
     */
    care_recipient_id?: string;
    /**
     * A text note to give context about the alert
     */
    note: string;
    /**
     * A unique identifier for the caregiver who reported the alert as resolved
     */
    caregiver_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class ObservationCodified {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'observation_codified';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * The ID of the original observation event.
     */
    observation_event_id: string;
    /**
     * The full text from which a selection was codified in the observation.
     */
    original_text: string;
    /**
     * The ID of a SNOMED concept or other taxonomy expressed as a URI.
     */
    code: string;
    /**
     * The fragment of text being codified in this event.
     */
    selection_text: string;
    /**
     * Where in the original text does fragment of codified text start (start of original_text is zero).
     */
    selection_offset: number;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class OutsideBedroom {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'outside_bedroom';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * Start timestamp of the period to check, decided by families
     */
    monitoring_start_at: string;
    /**
     * End timestamp of the period to check, decided by families
     */
    monitoring_end_at: string;
    /**
     * Duration spent outside bedroom between <monitoring_start_at> and <monitoring_end_at>
     */
    total_amount_of_time_outside_bedroom_in_seconds: number;
    /**
     * Minimum duration spent outside bedroom to generate this observation.
     */
    configured_maximum_total_time_outside_bedroom_in_seconds: number;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class PhonePasscodeResetAuthorized {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'phone_passcode_reset_authorized';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The caregiver associated with the event
     */
    caregiver_id: string;
    /**
     * id of the user who reset the passcode
     */
    reset_by?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class PhonePasscodeSet {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'phone_passcode_set';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The caregiver associated with the event
     */
    caregiver_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class PhysicalHealthObservation {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'physical_health_observation';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
    /**
     * An array of media objects defining images and audio related to this event.
     */
    media?: {
        /**
         * The type of media this array element contains.
         */
        /**
         * A URI to the media source.
         */
        src: string;
        [k: string]: any;
    }[];
    note?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class RecipientStatusUpdated {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'recipient_status_updated';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * id of the user who has been updated
     */
    care_recipient_id: string;
    /**
     * status to which the user has been updated
     */
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class RegularMedicationMaybeTaken {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'regular_medication_maybe_taken';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for this instance of the task.
     */
    task_instance_id?: string;
    /**
     * A unique identifier for a task definition. DEPRECATED: use task_instance_id instead.
     */
    task_definition_id?: string;
    /**
     * A unique identifier for a task schedule. DEPRECATED: use task_instance_id instead.
     */
    task_schedule_id?: string;
    /**
     * The coded reason why the medication was not taken or was partially taken.
     */
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id?: string;
    note?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class RegularMedicationNotObserved {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'regular_medication_not_observed';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for this instance of the task.
     */
    task_instance_id?: string;
    /**
     * A unique identifier for a task definition. DEPRECATED: use task_instance_id instead.
     */
    task_definition_id?: string;
    /**
     * A unique identifier for a task schedule. DEPRECATED: use task_instance_id instead.
     */
    task_schedule_id?: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id?: string;
    /**
     * The coded reason why the medication was not observed.
     */
    note?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class RegularMedicationNotTaken {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'regular_medication_not_taken';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for this instance of the task.
     */
    task_instance_id?: string;
    /**
     * A unique identifier for a task definition. DEPRECATED: use task_instance_id instead.
     */
    task_definition_id?: string;
    /**
     * A unique identifier for a task schedule. DEPRECATED: use task_instance_id instead.
     */
    task_schedule_id?: string;
    /**
     * The coded reason why the medication was not taken or was partially taken.
     */
    /**
     * An array of media objects defining images and audio related to this event.
     */
    media?: {
        /**
         * The type of media this array element contains.
         */
        /**
         * A URI to the media source.
         */
        src: string;
        [k: string]: any;
    }[];
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id?: string;
    note?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class RegularMedicationPartiallyTaken {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'regular_medication_partially_taken';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for this instance of the task.
     */
    task_instance_id?: string;
    /**
     * A unique identifier for a task definition. DEPRECATED: use task_instance_id instead.
     */
    task_definition_id?: string;
    /**
     * A unique identifier for a task schedule. DEPRECATED: use task_instance_id instead.
     */
    task_schedule_id?: string;
    /**
     * The coded reason why the medication was not taken or was partially taken.
     */
    /**
     * An array of media objects defining images and audio related to this event.
     */
    media?: {
        /**
         * The type of media this array element contains.
         */
        /**
         * A URI to the media source.
         */
        src: string;
        [k: string]: any;
    }[];
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id?: string;
    note?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class RegularMedicationTaken {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'regular_medication_taken';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for this instance of the task.
     */
    task_instance_id?: string;
    /**
     * A unique identifier for a task definition. DEPRECATED: use task_instance_id instead.
     */
    task_definition_id?: string;
    /**
     * A unique identifier for a task schedule. DEPRECATED: use task_instance_id instead.
     */
    task_schedule_id?: string;
    /**
     * An array of media objects defining images and audio related to this event.
     */
    media?: {
        /**
         * The type of media this array element contains.
         */
        /**
         * A URI to the media source.
         */
        src: string;
        [k: string]: any;
    }[];
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id?: string;
    note?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class RiskAssessmentCreated {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'risk_assessment_created';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * A unique client generated identifier for this item in the care plan.
     */
    care_plan_item_id: string;
    /**
     * A SNOMED CT concept identifier expressed as a URI for the category of the care plan this item belongs to.
     */
    care_plan_category_id: string;
    /**
     * Free text description of the risk being identified.
     */
    risk: string;
    /**
     * Free text description of the mitigation for the identified risk.
     */
    mitigation: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class StomaBagObservation {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'stoma_bag_observation';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
    /**
     * An array of media objects defining images and audio related to this event.
     */
    media?: {
        /**
         * The type of media this array element contains.
         */
        /**
         * A URI to the media source.
         */
        src: string;
        [k: string]: any;
    }[];
    note?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class SummaryOfCareCategoryRecorded {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'summary_of_care_category_recorded';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * A SNOMED CT concept identifier expressed as a URI for the category of the care plan this item belongs to.
     */
    care_plan_category_id: string;
    /**
     * Free text summary of the care pertaining to a care plan category.
     */
    summary_of_care_category: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class TaskCompleted {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'task_completed';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
    /**
     * A unique identifier for this instance of the task.
     */
    task_instance_id?: string;
    /**
     * A unique identifier for a task definition. DEPRECATED: use task_instance_id instead.
     */
    task_definition_id?: string;
    /**
     * A unique identifier for a task schedule. DEPRECATED: use task_instance_id instead.
     */
    task_schedule_id?: string;
    /**
     * The description of the task
     */
    task_definition_description: string;
    /**
     * A detailed description of the task
     */
    task_schedule_note?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class TaskCompletionReverted {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'task_completion_reverted';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
    /**
     * A unique identifier for this instance of the task.
     */
    task_instance_id?: string;
    /**
     * A unique identifier for a task definition. DEPRECATED: use task_instance_id instead.
     */
    task_definition_id?: string;
    /**
     * A unique identifier for a task schedule. DEPRECATED: use task_instance_id instead.
     */
    task_schedule_id?: string;
    /**
     * The description of the task
     */
    task_definition_description: string;
    /**
     * A detailed description of the task
     */
    task_schedule_note?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class TaskScheduleCreated {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'task_schedule_created';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for this instance of the task.
     */
    task_instance_id?: string;
    /**
     * A unique identifier for a task definition. DEPRECATED: use task_instance_id instead.
     */
    task_definition_id?: string;
    /**
     * A unique identifier for a task schedule. DEPRECATED: use task_instance_id instead.
     */
    task_schedule_id?: string;
    /**
     * A recurrence rule, as described by rfc5545
     */
    rrule: string;
    /**
     * Helpful text to fully explain how the caregiver can complete the task
     */
    note?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class TaskScheduleDeleted {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'task_schedule_deleted';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for this instance of the task.
     */
    task_instance_id?: string;
    /**
     * A unique identifier for a task definition. DEPRECATED: use task_instance_id instead.
     */
    task_definition_id?: string;
    /**
     * A unique identifier for a task schedule. DEPRECATED: use task_instance_id instead.
     */
    task_schedule_id?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class TaskScheduleUpdated {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'task_schedule_updated';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for this instance of the task.
     */
    task_instance_id?: string;
    /**
     * A unique identifier for a task definition. DEPRECATED: use task_instance_id instead.
     */
    task_definition_id?: string;
    /**
     * A unique identifier for a task schedule. DEPRECATED: use task_instance_id instead.
     */
    task_schedule_id?: string;
    /**
     * A recurrence rule, as described by rfc5545
     */
    rrule: string;
    /**
     * Helpful text to fully explain how the caregiver can complete the task
     */
    note?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class TaskSchedulesOrdered {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'task_schedules_ordered';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient whom this event concerns
     */
    care_recipient_id: string;
    /**
     * Time slot for which the tasks are ordered.
     */
    /**
     * Day of week for which tasks are ordered.
     */
    /**
     * Array of task_schedule_ids, ordered from first to last.
     */
    task_schedule_ids: string[];
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class ThirdPartyAccessRequested {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'third_party_access_requested';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The authorised user's full name
     */
    full_name: string;
    /**
     * The authorised user's phone or email address
     */
    contact_details: string;
    /**
     * The care recipient who the user has requested third party access to.
     */
    care_recipient_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class ToiletVisitRecorded {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'toilet_visit_recorded';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
    observed?: boolean;
    note?: string;
    /**
     * The type of visit to the toilet that was recorded.
     */
    /**
     * How many visits of the given type were recorded.
     */
    visit_count: number;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class UserActivated {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'user_activated';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * id of the user who activated the user
     */
    activated_by: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class UserCreated {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'user_created';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * id of the user who created the user
     */
    created_by?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class UserDeactivated {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'user_deactivated';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * id of the user who deactivated the user
     */
    deactivated_by: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class UserFirstLoggedIn {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'user_first_logged_in';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class UserInviteCancelled {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'user_invite_cancelled';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * id of the user who cancelled the invite of the user
     */
    cancelled_by: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class UserInvited {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'user_invited';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The user performing an action or recording an observation
     */
    user_id: string;
    /**
     * id of the user who invited the user
     */
    invited_by: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class VisitCancelled {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'visit_cancelled';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class VisitCompleted {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'visit_completed';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class VisitDetailsChanged {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'visit_details_changed';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
    /**
     * Start timestamp of the visit
     */
    start_at?: string;
    /**
     * End timestamp of the visit
     */
    end_at?: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id?: string;
    note?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class VisitNotStartedInTime {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'visit_not_started_in_time';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class VisitScheduled {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'visit_scheduled';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
    /**
     * Start timestamp of the scheduled visit
     */
    start_at: string;
    /**
     * End timestamp of the scheduled visit
     */
    end_at: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    note?: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class VisitSynchronisationFailed {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'visit_synchronisation_failed';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The agency that we synchronise visits with.
     */
    agency_id: string;
    /**
     * The id of the visit from the agency.
     */
    remote_id?: string;
    /**
     * The reason why the visit synchronisation failed.
     */
    reason: string;
}
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export class WeightObservation {
    /**
     * A unique identifier for this event.
     */
    id: string;
    /**
     * The snake-case name of this event.
     */
    event_type: 'weight_observation';
    /**
     * When this event was created by its source (e.g. a mobile app).
     */
    timestamp: string;
    /**
     * The care recipient who is the subject of an observation.
     */
    care_recipient_id: string;
    /**
     * The caregiver making the observation.
     */
    caregiver_id?: string;
    /**
     * A unique identifier for a visit, to correlate tasks and observations.
     */
    visit_id: string;
    /**
     * An array of media objects defining images and audio related to this event.
     */
    media?: {
        /**
         * The type of media this array element contains.
         */
        /**
         * A URI to the media source.
         */
        src: string;
        [k: string]: any;
    }[];
    /**
     * Weight in kilograms. Other units should be converted to kilos.
     */
    weight_kg: number;
    /**
     * An optional note attached to the weight observation
     */
    note?: string;
}
export declare enum EventType {
    abnormal_time_in_bathroom = "abnormal_time_in_bathroom",
    additional_medication_taken = "additional_medication_taken",
    agency_feature_disabled = "agency_feature_disabled",
    agency_feature_enabled = "agency_feature_enabled",
    agency_role_granted = "agency_role_granted",
    agency_role_revoked = "agency_role_revoked",
    alert_qualified = "alert_qualified",
    alert_raised = "alert_raised",
    alert_resolved = "alert_resolved",
    alert_status_updated = "alert_status_updated",
    anomaly_in_routine_detected = "anomaly_in_routine_detected",
    care_plan_item_deleted = "care_plan_item_deleted",
    care_recipient_access_granted = "care_recipient_access_granted",
    care_recipient_access_revoked = "care_recipient_access_revoked",
    care_recipient_address_updated = "care_recipient_address_updated",
    care_recipient_advanced_decisions_updated = "care_recipient_advanced_decisions_updated",
    care_recipient_basic_details_updated = "care_recipient_basic_details_updated",
    care_recipient_created = "care_recipient_created",
    care_recipient_general_practitioner_details_updated = "care_recipient_general_practitioner_details_updated",
    care_recipient_medical_history_updated = "care_recipient_medical_history_updated",
    care_recipient_personal_details_updated = "care_recipient_personal_details_updated",
    care_recipient_personal_preferences_updated = "care_recipient_personal_preferences_updated",
    care_recipient_pharmacy_details_updated = "care_recipient_pharmacy_details_updated",
    care_recipient_relationship_changed = "care_recipient_relationship_changed",
    care_recipient_return_overdue = "care_recipient_return_overdue",
    care_recipient_setting_changed = "care_recipient_setting_changed",
    care_recipient_synchronisation_failed = "care_recipient_synchronisation_failed",
    caregiver_added_to_visit = "caregiver_added_to_visit",
    caregiver_removed_from_visit = "caregiver_removed_from_visit",
    caregiver_synchronisation_failed = "caregiver_synchronisation_failed",
    caregiver_synchronisation_failure_resolved = "caregiver_synchronisation_failure_resolved",
    catheter_observation = "catheter_observation",
    check_in = "check_in",
    check_out = "check_out",
    concern_raised = "concern_raised",
    desired_outcome_created = "desired_outcome_created",
    door_closed = "door_closed",
    door_opened = "door_opened",
    door_opened_too_long = "door_opened_too_long",
    emergency_button_pressed = "emergency_button_pressed",
    entered_room = "entered_room",
    environmental_risk_assessment_completed = "environmental_risk_assessment_completed",
    event_delivered = "event_delivered",
    event_delivery_failed = "event_delivery_failed",
    event_rejected = "event_rejected",
    fall_detected = "fall_detected",
    file_deleted = "file_deleted",
    file_uploaded = "file_uploaded",
    fluid_intake_observation = "fluid_intake_observation",
    food_intake_observation = "food_intake_observation",
    general_observation = "general_observation",
    hardware_consent_form_signed = "hardware_consent_form_signed",
    hardware_consultation_requested = "hardware_consultation_requested",
    hardware_equipment_ready = "hardware_equipment_ready",
    hardware_installation_appointment_booked = "hardware_installation_appointment_booked",
    hardware_installation_complete = "hardware_installation_complete",
    hardware_monitoring_live = "hardware_monitoring_live",
    hardware_referral_form_sent = "hardware_referral_form_sent",
    important_sleep_duration_variation_measured = "important_sleep_duration_variation_measured",
    incontinence_pad_observation = "incontinence_pad_observation",
    left_home = "left_home",
    login = "login",
    medical_history_item_deleted = "medical_history_item_deleted",
    medical_history_item_recorded = "medical_history_item_recorded",
    medication_schedule_created = "medication_schedule_created",
    medication_schedule_deleted = "medication_schedule_deleted",
    medication_schedule_updated = "medication_schedule_updated",
    mental_health_observation = "mental_health_observation",
    mood_observation = "mood_observation",
    no_medication_observation_received = "no_medication_observation_received",
    no_recent_activity_in_bathroom_or_toilet = "no_recent_activity_in_bathroom_or_toilet",
    no_task_completion_observation_received = "no_task_completion_observation_received",
    note_added_to_alert = "note_added_to_alert",
    observation_codified = "observation_codified",
    outside_bedroom = "outside_bedroom",
    phone_passcode_reset_authorized = "phone_passcode_reset_authorized",
    phone_passcode_set = "phone_passcode_set",
    physical_health_observation = "physical_health_observation",
    recipient_status_updated = "recipient_status_updated",
    regular_medication_maybe_taken = "regular_medication_maybe_taken",
    regular_medication_not_observed = "regular_medication_not_observed",
    regular_medication_not_taken = "regular_medication_not_taken",
    regular_medication_partially_taken = "regular_medication_partially_taken",
    regular_medication_taken = "regular_medication_taken",
    risk_assessment_created = "risk_assessment_created",
    stoma_bag_observation = "stoma_bag_observation",
    summary_of_care_category_recorded = "summary_of_care_category_recorded",
    task_completed = "task_completed",
    task_completion_reverted = "task_completion_reverted",
    task_schedule_created = "task_schedule_created",
    task_schedule_deleted = "task_schedule_deleted",
    task_schedule_updated = "task_schedule_updated",
    task_schedules_ordered = "task_schedules_ordered",
    third_party_access_requested = "third_party_access_requested",
    toilet_visit_recorded = "toilet_visit_recorded",
    user_activated = "user_activated",
    user_created = "user_created",
    user_deactivated = "user_deactivated",
    user_first_logged_in = "user_first_logged_in",
    user_invite_cancelled = "user_invite_cancelled",
    user_invited = "user_invited",
    visit_cancelled = "visit_cancelled",
    visit_completed = "visit_completed",
    visit_details_changed = "visit_details_changed",
    visit_not_started_in_time = "visit_not_started_in_time",
    visit_scheduled = "visit_scheduled",
    visit_synchronisation_failed = "visit_synchronisation_failed",
    weight_observation = "weight_observation"
}
